{"version":3,"file":"static/js/744.deb449a4.chunk.js","mappings":"kMAyBA,EArBmB,SAAC,GAAD,IAAEA,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OACf,wBACKD,EAAOE,KAAI,SAAAC,GACV,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OAAO,yBACL,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMR,GAAzC,SACKI,KAFSD,EAKjB,KATU,C,wJCCJ,SAASM,IACpB,OAA2BC,EAAAA,EAAAA,UAAS,MAApC,eAAOX,EAAP,KAAcY,EAAd,KACMX,GAAWY,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WAAK,wCACX,8GAE2BC,EAAAA,EAAAA,MAF3B,OAEcC,EAFd,OAGQJ,EAAUI,GAHlB,gDAKQC,QAAQC,MAAR,MALR,0DADW,uBAAC,WAAD,wBAQTC,EACL,GAAE,KAEC,iCACA,wBAAI,mBACHnB,IAAU,SAAC,IAAD,CAAYA,OAAUA,EAAQC,SAAWA,MAG3D,C","sources":["components/MoviesList/MoviesList.jsx","views/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport {PropTypes} from 'prop-types';\n\nconst MoviesList = ({movies, location}) => (\n    <ol>\n        {movies.map(movie => {\n          const { id, title } = movie;\n          return <li key={id}>\n            <Link to={`/movies/${id}`} state={{from: location}}>\n                {title}\n            </Link>\n          </li> \n        })}\n    </ol>\n);\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n     PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n     }),   \n    ),\n};\nexport default MoviesList;","import MoviesList from \"components/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { fetchFilms } from \"services/api\";\n\nexport default function HomePage () {\n    const [movies,setMovies] = useState(null);\n    const location = useLocation();\n\n    useEffect(()=> {\n        async function fetchMovies() {\n            try{\n                const data = await fetchFilms();\n                setMovies(data);\n            } catch (error) {\n                console.error(error);\n            }\n        } fetchMovies();\n    }, []);\n    return (\n        <>\n        <h2>Trending today</h2>\n        {movies && <MoviesList movies = {movies} location= {location} />}\n        </>\n    );\n};"],"names":["movies","location","map","movie","id","title","Link","to","state","from","HomePage","useState","setMovies","useLocation","useEffect","fetchFilms","data","console","error","fetchMovies"],"sourceRoot":""}