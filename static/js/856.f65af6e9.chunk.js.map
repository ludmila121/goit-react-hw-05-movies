{"version":3,"file":"static/js/856.f65af6e9.chunk.js","mappings":"kMAyBA,EArBmB,SAAC,GAAD,IAAEA,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAV,OACf,wBACKD,EAAOE,KAAI,SAAAC,GACV,IAAQC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MACZ,OAAO,yBACL,SAAC,EAAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAACC,KAAMR,GAAzC,SACKI,KAFSD,EAKjB,KATU,C,gKCGJ,SAASM,IACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,mBAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BL,EAAAA,EAAAA,UAAS,MAArC,eAAOX,EAAP,KAAeiB,EAAf,KACMhB,GAAWiB,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WACDJ,EAAaK,IAAI,UAGtB,mCAAC,8GAE8BC,EAAAA,EAAAA,IAAkBN,GAFhD,OAEaO,EAFb,OAGOL,EAAUK,GACLA,EAASC,QACVC,MAAM,kCALjB,gDAQOC,QAAQC,QARf,yDAAD,sDAWH,GAAE,CAACX,IAgBJ,OACI,iCACA,kBAAMY,SAZU,SAAAC,GAChBA,EAAEC,iBACF,IAAMC,EAAelB,EAAMmB,OAC3B,IAAID,EACA,OAAON,MAAM,iCAEjBR,EAAgB,CAACJ,MAAOkB,IACxBjB,EAAS,GACZ,EAIG,WACI,kBAAOmB,KAAK,OAAOC,MAAOrB,EAAOsB,SAjBrB,SAAAN,GAChBf,EAASe,EAAEO,cAAcF,MAC5B,KAgBO,mBAAQD,KAAK,SAAb,SAAsB,cAExBhC,IAAU,SAAC,IAAD,CAAYA,OAAQA,EAAQoC,IAAK,GAAInC,SAAUA,MAGlE,C","sources":["components/MoviesList/MoviesList.jsx","views/MoviesPage.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport {PropTypes} from 'prop-types';\n\nconst MoviesList = ({movies, location}) => (\n    <ol>\n        {movies.map(movie => {\n          const { id, title } = movie;\n          return <li key={id}>\n            <Link to={`/movies/${id}`} state={{from: location}}>\n                {title}\n            </Link>\n          </li> \n        })}\n    </ol>\n);\n\nMoviesList.propTypes = {\n    movies: PropTypes.arrayOf(\n     PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n     }),   \n    ),\n};\nexport default MoviesList;","import MoviesList from \"components/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { fetchSearchMovies } from \"services/api\";\n\n\n\nexport default function SearchMovies() {\n    const [query, setQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [movies, setMovies] = useState(null);\n    const location = useLocation();\n\n    \n    useEffect(() => {\n        if (!searchParams.get('query')){\n            return;\n        }\n        (async function fetchMovies(){\n            try{\n                const response = await fetchSearchMovies(searchParams);\n                setMovies(response);\n                if (!response.length){\n                    alert('Nothing found for your request');\n                }\n            } catch(error){\n                console.error();\n            }\n        })();\n    }, [searchParams]);\n\n    const handlChange = e => {\n        setQuery(e.currentTarget.value);\n    };\n\n    const handlSubmit = e => {\n        e.preventDefault();\n        const currentQuery = query.trim();\n        if(!currentQuery){\n            return alert('Please enter a valid request!');\n        }\n        setSearchParams({query: currentQuery});\n        setQuery('');\n    };\n\n    return(\n        <>\n        <form onSubmit={handlSubmit}>\n            <input type=\"text\" value={query} onChange={handlChange}></input>\n            <button type=\"submit\">Search</button>\n        </form>\n         {movies && <MoviesList movies={movies} url={''} location={location} />}\n        </>\n    );\n}"],"names":["movies","location","map","movie","id","title","Link","to","state","from","SearchMovies","useState","query","setQuery","useSearchParams","searchParams","setSearchParams","setMovies","useLocation","useEffect","get","fetchSearchMovies","response","length","alert","console","error","onSubmit","e","preventDefault","currentQuery","trim","type","value","onChange","currentTarget","url"],"sourceRoot":""}